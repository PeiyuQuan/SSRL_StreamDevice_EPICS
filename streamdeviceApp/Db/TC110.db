# 001 read and write heating
#record(bi,"$(P)$(M)readHeating")
#	{
#		field(DESC, "read heating")
#		field(DTYP, "stream")
#		field(INP, "@TC110.proto readHeating $(PORT)")
#		field(ZNAM, "off")
#		field(ONAM, "on")
#		field(SCAN, "1 second")
#	}
	
#record(bo,"$(P)$(M)setHeating")
#	{
#		field(DESC, "set heating")
#		field(DTYP, "stream")
#		field(OUT, "@TC110.proto setHeating $(PORT)")
#		field(ZNAM, "off")
#		field(ONAM, "on")
#	}

# 002 read and write standby

record(bi,"$(P)$(M)readStandby")
	{
		field(DESC, "read Standby")
		field(DTYP, "stream")
		field(INP, "@TC110.proto readStandby $(PORT)")
		field(ZNAM, "off")
		field(ONAM, "on")
		field(SCAN, "1 second")
	}
	
record(bo,"$(P)$(M)setStandby")
	{
		field(DESC, "set Standby")
		field(DTYP, "stream")
		field(OUT, "@TC110.proto setStandby $(PORT)")
		field(ZNAM, "off")
		field(ONAM, "on")
	}

#010 Pumping station
record(bi,"$(P)$(M)readPumpgStatn")
	{
		field(DESC, "Pumping station")
		field(DTYP, "stream")
		field(INP, "@TC110.proto readPumpgStatn $(PORT)")
		field(ZNAM, "off")
		field(ONAM, "on")
		field(SCAN, "1 second")
	}
	
record(bo,"$(P)$(M)setPumpgStatn")
	{
		field(DESC, "Pumping station")
		field(DTYP, "stream")
		field(OUT, "@TC110.proto setPumpgStatn $(PORT)")
		field(ZNAM, "off")
		field(ONAM, "on")
	}
	
#012 Enable venting
record(bi,"$(P)$(M)readenablevent")
	{
		field(DESC, "read enablevent")
		field(DTYP, "stream")
		field(INP, "@TC110.proto readenablevent $(PORT)")
		field(ZNAM, "no")
		field(ONAM, "yes")
		field(SCAN, "1 second")
	}
	
record(bo,"$(P)$(M)setenablevent")
	{
		field(DESC, "set enablevent")
		field(DTYP, "stream")
		field(OUT, "@TC110.proto setenablevent $(PORT)")
		field(ZNAM, "no")
		field(ONAM, "yes")
	}

#023 Motor Pump
record(bi,"$(P)$(M)readmotorpump")
	{
		field(DESC, "read motor pump")
		field(DTYP, "stream")
		field(INP, "@TC110.proto readmotorpump $(PORT)")
		field(ZNAM, "off")
		field(ONAM, "on")
		field(SCAN, "1 second")
	}
	
record(bo,"$(P)$(M)setmotorpump")
	{
		field(DESC, "set motor pump")
		field(DTYP, "stream")
		field(OUT, "@TC110.proto setmotorpump $(PORT)")
		field(ZNAM, "off")
		field(ONAM, "on")
	}

#025 Operation mode backing pump
record(mbbi,"$(P)$(M)readOpModeBKP")
	{
		field(DESC, "Operation mode backing pump")
		field(DTYP, "stream")
		field(INP, "@TC110.proto readOpModeBKP $(PORT)")
		field(ZRVL, "0")
		field(ONVL, "1")
		field(TWVL, "2")
		field(THVL, "3")
		field(ZRST, "continuous operation")
		field(ONST, "intermittent operation")
		field(TWST, "delayed switching on")
		field(THST, "delay interval operate")
		field(SCAN, "1 second")
	}
	
record(mbbo,"$(P)$(M)setOpModeBKP")
	{
		field(DESC, "Operation mode backing pump")
		field(DTYP, "stream")
		field(OUT, "@TC110.proto setOpModeBKP $(PORT)")
		field(ZRVL, "0")
		field(ONVL, "1")
		field(TWVL, "2")
		field(THVL, "3")
		field(ZRST, "continuous operation")
		field(ONST, "intermittent operation")
		field(TWST, "delayed switching on")
		field(THST, "delay interval operate")
	}

#026 Rotation speed setting mode
record(bi, "$(P)$(M)readSpdSetMode")
	{
		field(DESC, "read Speed Set Mode")
		field(DTYP, "stream")
		field(INP, "@TC110.proto readSpdSetMode $(PORT)")
		field(ZNAM, "off")
		field(ONAM, "on")
		field(SCAN, "1 second")
	}
	
record(bo, "$(P)$(M)setSpdSetMode")
	{
		field(DESC, "set Speed Set Mode")
		field(DTYP, "stream")
		field(OUT, "@TC110.proto setSpdSetMode $(PORT)")
		field(ZNAM, "off")
		field(ONAM, "on")
	}

#027 gas mode
record(mbbi,"$(P)$(M)readgasmode")
	{
		field(DESC, "read gas mode")
		field(DTYP, "stream")
		field(INP, "@TC110.proto readgasmode $(PORT)")
		field(ZRVL, "0")
		field(ONVL, "1")
		field(TWVL, "2")
		field(ZRST, "heavy gases")
		field(ONST, "light gases")
		field(TWST, "Hhlium")
		field(SCAN, "1 second")
	}
	
record(mbbo,"$(P)$(M)setgasmode")
	{
		field(DESC, "set gas mode")
		field(DTYP, "stream")
		field(OUT, "@TC110.proto setgasmode $(PORT)")
		field(ZRVL, "0")
		field(ONVL, "1")
		field(TWVL, "2")
		field(ZRST, "heavy gases")
		field(ONST, "light gases")
		field(TWST, "Hhlium")
	}

#030 Venting mode
record(mbbi,"$(P)$(M)readventingmode")
	{
		field(DESC, "read venting mode")
		field(DTYP, "stream")
		field(INP, "@TC110.proto readventingmode $(PORT)")
		field(ZRVL, "0")
		field(ONVL, "1")
		field(TWVL, "2")
		field(ZRST, "delayed venting")
		field(ONST, "no venting")
		field(TWST, "direct venting")
		field(SCAN, "1 second")
	}
	
record(mbbo,"$(P)$(M)setventingmode")
	{
		field(DESC, "set venting mode")
		field(DTYP, "stream")
		field(OUT, "@TC110.proto setventingmode $(PORT)")
		field(ZRVL, "0")
		field(ONVL, "1")
		field(TWVL, "2")
		field(ZRST, "delayed venting")
		field(ONST, "no venting")
		field(TWST, "direct venting")
	}

#050 Sealing gas
#record(bi,"$(P)$(M)readsealinggas")
#	{
#		field(DESC, "read sealing gas")
#		field(DTYP, "stream")
#		field(INP, "@TC110.proto readsealinggas $(PORT)")
#		field(ZNAM, "off")
#		field(ONAM, "on")
#		field(SCAN, "1 second")
#	}
	
#record(bo,"$(P)$(M)setsealinggas")
#	{
#		field(DESC, "set sealing gas")
#		field(DTYP, "stream")
#		field(OUT, "@TC110.proto setsealinggas $(PORT)")
#		field(ZNAM, "off")
#		field(ONAM, "on")
#	}

#060 Control via interface
#record(mbbi,"$(P)$(M)readCtrlVialnt")
#	{
#		field(DESC, "Control via interface")
#		field(DTYP, "stream")
#		field(INP, "@TC110.proto readCtrlVialnt $(PORT)")
#		field(ZRVL, "1")
#		field(ONVL, "2")
#		field(TWVL, "4")
#		field(THVL, "8")
#		field(FRVL, "16")
#		field(FVVL, "255")
#		field(ZRST, "remote")
#		field(ONST, "RS-485")
#		field(TWST, "PV.can")
#		field(THST, "Fieldbus")
#		field(FRST, "E74")
#		field(FVST, "unlock interface select")
#		field(SCAN, "1 second")
#	}
	
#record(mbbo,"$(P)$(M)setCtrlVialnt")
#	{
#		field(DESC, "Control via interface")
#		field(DTYP, "stream")
#		field(OUT, "@TC110.proto setCtrlVialnt $(PORT)")
#		field(ZRVL, "1")
#		field(ONVL, "2")
#		field(TWVL, "4")
#		field(THVL, "8")
#		field(FRVL, "16")
#		field(FVVL, "255")
#		field(ZRST, "remote")
#		field(ONST, "RS-485")
#		field(TWST, "PV.can")
#		field(THST, "Fieldbus")
#		field(FRST, "E74")
#		field(FVST, "unlock interface select")
#	}


#061 Interface selection locked
#record(bi,"$(P)$(M)readIntSelLckd")
#	{
#		field(DESC, "Interface selection locked")
#		field(DTYP, "stream")
#		field(INP, "@TC110.proto readIntSelLckd $(PORT)")
#		field(ZNAM, "off")
#		field(ONAM, "on")
#		field(SCAN, "1 second")
#	}
	
#record(bo,"$(P)$(M)setIntSelLckd")
#	{
#		field(DESC, "Interface selection locked")
#		field(DTYP, "stream")
#		field(OUT, "@TC110.proto setIntSelLckd $(PORT)")
#		field(ZNAM, "off")
#		field(ONAM, "on")
#	}
	
#300 Remote priority
#record(bi,"$(P)$(M)readRemotePrio")
#	{
#		field(DESC, "read Remote Priority")
#		field(DTYP, "stream")
#		field(INP, "@TC110.proto readRemotePrio $(PORT)")
#		field(ZNAM, "no")
#		field(ONAM, "yes")
#		field(SCAN, "1 second")
#	}
	
#record(bo,"$(P)$(M)setRemotePrio")
#	{
#		field(DESC, "set Remote Priority")
#		field(DTYP, "stream")
#		field(OUT, "@TC110.proto setRemotePrio $(PORT)")
#		field(ZNAM, "no")
#		field(ONAM, "yes")
#	} 
	
#304 Overtemperature pump
#record(bi,"$(P)$(M)readOvTempElec")
#	{
#		field(DESC, "Overtemperature electronic drive unit")
#		field(DTYP, "stream")
#		field(INP, "@TC110.proto readOvTempElec $(PORT)")
#		field(ZNAM, "no")
#		field(ONAM, "yes")
#		field(SCAN, "1 second")
#	}

#305 Overtemperature pump
#record(bi,"$(P)$(M)readOvTempPump")
#	{
#		field(DESC, "Overtemperature pump")
#		field(DTYP, "stream")
#		field(INP, "@TC110.proto readOvTempPump $(PORT)")
#		field(ZNAM, "no")
#		field(ONAM, "yes")
#		field(SCAN, "1 second")
#	}

#306 Target speed reached
#record(bi,"$(P)$(M)readsetSpdAtt")
#	{
#		field(DESC, "Target speed reached")
#		field(DTYP, "stream")
#		field(INP, "@TC110.proto readsetSpdAtt $(PORT)")
#		field(ZNAM, "no")
#		field(ONAM, "yes")
#		field(SCAN, "1 second")
#	}
	
#307 Pump accelerating
#record(bi,"$(P)$(M)readPumpAccel")
#	{
#		field(DESC, "Pump accelerating")
#		field(DTYP, "stream")
#		field(INP, "@TC110.proto readPumpAccel $(PORT)")
#		field(ZNAM, "no")
#		field(ONAM, "yes")
#		field(SCAN, "1 second")
#	}



#309 Actual rotation speed
#record(longin,"$(P)$(M)readActualSpdHz")
#	{
#		field(DESC,"Actual Speed")
#		field(DTYP,"stream")
#		field(INP,"@TC110.proto readActualSpdHz $(PORT)")
#		field(EGU, "Hz")
#		field(SCAN, "1 second")
#	}
	
#308 read "set rotation speed"	
#record(longin,"$(P)$(M)readsetRotSpdHz")
#	{
#		field(DESC,"set rotation speed")
#		field(DTYP,"stream")
#		field(INP,"@TC110.proto readsetRotSpdHz $(PORT)")
#		field(EGU, "Hz")
#		field(SCAN, "1 second")
#	}
	
#310 Drive current
#record(longin,"$(P)$(M)readDrvCurrent")
#	{
#		field(DESC,"Drive Current")
#		field(DTYP,"stream")
#		field(INP,"@TC110.proto readDrvCurrent $(PORT)")
#		field(EGU, "A")
#		field(SCAN, "1 second")
#		field(FLNK, "$(P)$(M)DrvCurrent")
#	}
	
#record(calc,"$(P)$(M)DrvCurrent")
#	{
#	field(INPA, "$(P)readDrvCurrent.VAL")
#	field(CALC, "A/100")
#	field(EGU, "A")
#	}

#313 Drive Voltage
#record(longin,"$(P)$(M)readDrvVoltage")
#	{
#		field(DESC,"Drive Voltage")
#		field(DTYP,"stream")
#		field(INP,"@TC110.proto readDrvVoltage $(PORT)")
#		field(EGU, "V")
#		field(SCAN, "1 second")
#		field(FLNK, "$(P)$(M)DrvVoltage")
#	}
	
#record(calc,"$(P)$(M)DrvVoltage")
#	{
#	field(INPA, "$(P)readDrvVoltage.VAL")
#	field(CALC, "A/100")
#	field(EGU, "V")
#	}

#315 Nominal Spd
#record(longin,"$(P)$(M)readNominal_Spd")
#	{
#		field(DESC,"Nominal rotation Speed")
#		field(DTYP,"stream")
#		field(INP,"@TC110.proto readNominal_Spd $(PORT)")
#		field(EGU, "Hz")
#		field(SCAN, "1 second")
#	}

#316 Drive Power
#record(longin,"$(P)$(M)readDrvPower")
#	{
#		field(DESC,"Drive Power")
#		field(DTYP,"stream")
#		field(INP,"@TC110.proto readDrvPower $(PORT)")
#		field(EGU, "W")
#		field(SCAN, "1 second")
#		field(FLNK, "$(P)$(M)DrvPower")
#	}
	
#record(calc,"$(P)$(M)DrvPower")
#	{
#	field(INPA, "$(P)readDrvPower.VAL")
#	field(CALC, "A/100")
#	field(EGU, "W")
#	}


#326 Temperature electronics
record(longin,"$(P)$(M)readTempElec")
	{
		field(DESC,"read Temperature electronics")
		field(DTYP,"stream")
		field(INP,"@TC110.proto readTempElec $(PORT)")
		field(EGU, "C")
		field(SCAN, "1 second")
	}

#330 Temperature Pump bottom part
#record(longin,"$(P)$(M)readTempPumpBot")
#	{
#		field(DESC,"read Temperature Pump bottom part")
#		field(DTYP,"stream")
#		field(INP,"@TC110.proto readTempPumpBot $(PORT)")
#		field(EGU, "C")
#		field(SCAN, "1 second")
#	}
	
#398 Actual rotation speed	
record(longin,"$(P)$(M)readActualSpdrpm")
	{
		field(DESC,"Actual Speed")
		field(DTYP,"stream")
		field(INP,"@TC110.proto readActualSpdrpm $(PORT)")
		field(EGU, "rpm")
		field(SCAN, "1 second")
	}
	
#397 read "set rotation spped"	
record(longin,"$(P)$(M)readsetRotSpdrpm")
	{
		field(DESC,"set rotation speed")
		field(DTYP,"stream")
		field(INP,"@TC110.proto readsetRotSpdrpm $(PORT)")
		field(EGU, "rmp")
		field(SCAN, "1 second")
	}
	
#399 Nominal Speed
#record(longin,"$(P)$(M)readNominalSpd")
#	{
#		field(DESC,"Nominal Speed")
#		field(DTYP,"stream")
#		field(INP,"@TC110.proto readNominalSpd $(PORT)")
#		field(EGU, "rpm")
#		field(SCAN, "1 second")
#	}
	
#707 rotation speed setting mode
record(longin,"$(P)$(M)readSpdSVal")
	{
		field(DESC,"Rotation speed")
		field(DTYP,"stream")
		field(INP,"@TC110.proto readSpdSVal $(PORT)")
		field(EGU, "%")
		field(SCAN, "1 second")
	}


record(calc,"$(P)$(M)readSpdSVal_read")
	{
		field(INPA, "$(P)readSpdSVal.VAL")
		field(CALC, "A/100")
		field(EGU, "%")
	}

record(longout,"$(P)$(M)setSpdSVal")
	{
		field(DESC,"Rotation speed")
		field(DTYP,"stream")
		field(OUT,"@TC110.proto setSpdSVal $(PORT)")
		field(EGU, "%")
	}
	
##717 set rotation speed at standby
record(longin,"$(P)$(M)readSpdbySVal")
	{
		field(DESC,"Rotation speed at standby")
		field(DTYP,"stream")
		field(INP,"@TC110.proto readSpdbySVal $(PORT)")
		field(EGU, "%")
		field(SCAN, "1 second")
	}


record(calc,"$(P)$(M)readSpdbySVal_read")
	{
		field(INPA, "$(P)readSpdbySVal.VAL")
		field(CALC, "A/100")
		field(EGU, "%")
	}

record(longout,"$(P)$(M)setSpdbySVal")
	{
		field(DESC,"Rotation speed at standby")
		field(DTYP,"stream")
		field(OUT,"@TC110.proto setSpdbySVal $(PORT)")
		field(EGU, "%")
	}	
#720 Vent speed
record(longin,"$(P)$(M)readVentSpd")
	{
		field(DESC,"Vent speed")
		field(DTYP,"stream")
		field(INP,"@TC110.proto readVentSpd $(PORT)")
		field(EGU, "%")
		field(SCAN, "1 second")
	}

record(calc,"$(P)$(M)readVentSpd_read")
	{
		field(INPA, "$(P)readVentSpd.VAL")
		field(CALC, "A/100")
		field(EGU, "%")
	}

record(longout,"$(P)$(M)setVentSpd")
	{
		field(DESC,"Vent speed")
		field(DTYP,"stream")
		field(OUT,"@TC110.proto setVentSpd $(PORT)")
		field(EGU, "%")
	}

#721 Vent time
record(longin,"$(P)$(M)readVentTime")
	{
		field(DESC,"Vent time")
		field(DTYP,"stream")
		field(INP,"@TC110.proto readVentTime $(PORT)")
		field(EGU, "s")
		field(SCAN, "1 second")
	}

record(longout,"$(P)$(M)setVentTime")
	{
		field(DESC,"Vent time")
		field(DTYP,"stream")
		field(OUT,"@TC110.proto setVentTime $(PORT)")
		field(EGU, "s")
	}
